classdef Icon < handle
    properties
        img;
        rect;
        terms;
        src;
        width;
        height;
        pos;
    end
    methods
        function obj = Icon(src, len, icon, hShift, vShift, width, height)
            obj.src = src;
            obj.width = width;
            obj.height = height;
            obj.pos = [8*len+hShift vShift];
            obj.img = image(src.window, ...
                            [(8*len+hShift) (8*len+hShift+width)], ...
                            [vShift (vShift+height)], flip(imread(icon), 1), ...
                            'ButtonDownFcn', @obj.iconCallback);
            obj.rect = rectangle(src.window, 'position', ...
                                 [(8*len+hShift) vShift width height], ...
                                 'edgecolor', [1 0 0], 'linewidth', 1.5);
            obj.terms(1) = rectangle(src.window, ...
                                     'position', [(8*len+hShift+width) ...
                                                  floor(vShift+height/2) ...
                                                  1.75 0], ...
                                     'edgecolor', [1 0 0], 'linewidth', 1.5);
            obj.terms(2) = rectangle(src.window, ...
                                     'position', [(8*len+hShift+width+1.75) ...
                                     floor(vShift+height/2)-0.25 0.5 0.5], ...
                                     'Curvature', [1 1], ...
                                     'edgecolor', [1 0 0], 'linewidth', 1.5);
        end
        
        function iconCallback(obj, ~, ~)
            set(gcf, 'WindowButtonMotionFcn', @obj.move);
            obj.src.drag = obj;
            obj.src.dragPt = [obj.img.XData obj.img.YData];
        end
        
        function move(obj, ~, ~)
            if obj.src.editable && obj.src.drag ~= 0
                current = get(obj.src.window, 'CurrentPoint');
                diffX = floor(current(1)-obj.src.dragPt(1));
                diffY = floor(current(3)-obj.src.dragPt(3));
                obj.pos = [obj.src.dragPt(1)+diffX obj.src.dragPt(2)+diffY];
                obj.rect.Position = [obj.src.dragPt(1)+diffX ...
                                    obj.src.dragPt(3)+diffY ...
                                    obj.width obj.height];
                set(obj.img, 'XData', obj.src.dragPt(1:2)+diffX, ...
                    'YData', obj.src.dragPt(3:4)+diffY);
                set(obj.terms(1), 'position', ...
                    [obj.src.dragPt(1)+obj.width+diffX ...
                     floor(obj.src.dragPt(3)+obj.height/2)+diffY 1.75 0]);
                set(obj.terms(2), 'position', ...
                    [obj.src.dragPt(1)+obj.width+1.75+diffX ...
                     floor(obj.src.dragPt(3)+obj.height/2)-0.25+diffY 0.5 0.5]);
                if diffX ~= 0 || diffY ~= 0
                    obj.src.moved = true;
                end
            end    
        end
    end
end